/* src/components/CheckListItem/CheckListItem.module.css */

.checkListItemContainer {
  display: flex;
  align-items: flex-start;
  margin: 1rem;
  padding-left: 0;
  cursor: pointer; /* Indicate it's clickable */
  position: relative; /* Needed for absolute positioning of hidden checkbox if desired */
  /* Improve focus outline visibility */
  outline-offset: 2px;
}
.checkListItemContainer:focus-visible {
  outline: 2px solid var(--ifm-color-primary); /* Docusaurus primary color focus */
}

/* Wrapper for the custom icon pseudo-elements */
.customCheckboxIcon {
  flex-shrink: 0;
  width:15px; /* Reserve space for the icon box */
  height: 15px; /* Ensure height matches line-height roughly */
  margin-right: 0.75em; /* Space between icon and text */
  position: relative; /* For positioning checkmark pseudo-element */
  margin-top: 0.18em; /* Fine-tune vertical alignment */
}

/* The box (unchecked state) */
.customCheckboxIcon::before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  width: 100%; /* Fill the wrapper */
  height: 100%;
  border: 1.5px solid var(--border-default, #ccc); /* Added fallback */
  border-radius: 2px;
  background-color: transparent;
  transition: background-color 0.15s ease-in-out, border-color 0.15s ease-in-out; /* Smooth transition */
}

/* The checkmark (hidden by default, shown when parent has .checked class) */
.customCheckboxIcon::after {
  content: '';
  position: absolute;
  box-sizing: border-box; /* Ensure padding/border are included in width/height */

  /* Positioning the checkmark inside the box */
  left: 0.40em;  /* Adjusted slightly */
  top: 0.15em;   /* Adjusted slightly */
  width: 0.35em; /* Adjusted slightly */
  height: 0.65em;/* Adjusted slightly */
  /* color: var(--background-01); */ /* REMOVE THIS - not used for border */

  /* Creating the checkmark shape with borders */
  border-style: solid; /* <<< ADD THIS */
  border-color: #ffffff; /* <<< ADD THIS - Set explicit contrast color (e.g., white) */
                         /*      Or use a variable like var(--ifm-contrast-color, #fff) */
  border-width: 0 2px 2px 0; /* Only right and bottom borders */

  /* Rotate to form checkmark */
  transform: rotate(45deg);

  /* Hide by default */
  opacity: 0;
  transition: opacity 0.15s ease-in-out;
}


/* --- Checked State Styles --- */
.checkListItemContainer.checked .customCheckboxIcon::before {
  /* Ensure --icon-highlight is defined and contrasts with the checkmark color */
  background-color: var(--icon-highlight, var(--ifm-color-primary, blue)); /* Added fallbacks */
  border-color: var(--icon-highlight, var(--ifm-color-primary, blue)); /* Added fallbacks */
}

.checkListItemContainer.checked .customCheckboxIcon::after {
  opacity: 1; /* Show the checkmark */
}


/* --- Content Styling --- */
.checkListItemContent {
  flex-grow: 1;
  margin-top: 0.1rem;
  min-width: 0;
  user-select: none; /* Prevent text selection when clicking */
  color:var(--text-secondary)
}


/* --- Visually Hidden Checkbox --- */
.hiddenCheckbox {
  /* Position it off-screen or hide visually */
  position: absolute;
  opacity: 0;
  width: 1px;  /* Minimize size */
  height: 1px; /* Minimize size */
  margin: -1px;
  padding: 0;
  overflow: hidden;
  border: 0;
  clip: rect(0, 0, 0, 0);
  white-space: nowrap;
}